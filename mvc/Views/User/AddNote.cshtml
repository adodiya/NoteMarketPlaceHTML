@model NotesMarketPlace.Models.Notes_NotesAttachment

@{
    ViewBag.Title = "AddNote";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    @Styles.Render("~/Content/custom/responsive-tabs.min.css")

    @Styles.Render("~/Content/custom/add-notes.css")
    @Styles.Render("~/Content/custom/responsive.css")
    @Scripts.Render("~/bundles/jquery")
}


<!-- Banner Starts-->
<section id="banner">
    <div class="content-box-md">
        <div class="container" id="banner-content">
            <h1 class="text-center">Add notes</h1>
        </div>

    </div>
</section>
<!-- Banner Ends-->
<!-- Add notes form Starts-->
<section id="add-notes">
    <div class="content-box-md">
        <div class="container">
            <h3>Basic Note Details</h3>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Note.SellerID)
                @Html.HiddenFor(model => model.Note.ID)
            @Html.HiddenFor(model=>model.Note.Status)

        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.Title)
                    @Html.TextBoxFor(model => model.Note.Title, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                    @Html.ValidationMessageFor(model => model.Note.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.CategoryID)

                    @Html.DropDownListFor(model => model.Note.CategoryID, new SelectList(Model.Note.CategoryCollection, "CategoryID", "Name"), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Note.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label>Display Picture</label>


                    <input type="file" name="displaypic" value="@Model.Note.DisplayPic" />


                    @if (Model.Note.DisplayPic != null)
                    {

                        <img src="@Url.Content(@Model.Note.DisplayPic)" id="removepic" height="100" width="100" />

                        <button class="btn" id="delete" type="button">Delete</button>
                        @Html.Hidden("RemoveDisplayPic", "", new { @id = "remove" })

                    }


                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label>Upload Notes<span> *</span></label>
                    <!--  <div class="image-upload form-control1 text-center">
            <label for="notes-picture-input">
                <img src="../images/upload-note.png">
                <h6 class="text center">Upload your notes</h6>
            </label>-->

                    <input id="notes-picture-input" type="file" name="attachmentfiles" value="@Model.NotesAttachment.FilePath" multiple />
                    @Html.ValidationMessageFor(model => model.NotesAttachment.FilePath, "", new { @class = "text-danger" })

                    <ul>
                        @foreach (var file in Model.AttachmentList)
                        {


                            <li>

                                <a class="title" href="@Url.Action("DownloadNotes","User",new { id=@file.ID})">@file.FileName</a>
                                <a href="javascript:void(0);" data-id="@file.ID" class="deleteItem">X</a>
                            </li>

                        }
                    </ul>

                    }


                    <!--</div>-->

                </div>

            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.TypeID)

                    @Html.DropDownListFor(model => model.Note.TypeID, new SelectList(Model.Note.TypeCollection, "TypeID", "Name"), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Note.TypeID, "", new { @class = "text-danger" })
                </div>
            </div>

         




            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.NoOfPages)
                    @Html.TextBoxFor(model => model.Note.NoOfPages, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                </div>
            </div>


            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.Description)
                    @Html.TextAreaFor(model => model.Note.Description, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                </div>
            </div>

        </div>
        <h3>Institution Details</h3>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.CountryID)

                    @Html.DropDownListFor(model => model.Note.CountryID, new SelectList(Model.Note.CountryCollection, "CountryID", "Name"), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Note.CountryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.UniversityName)
                    @Html.TextBoxFor(model => model.Note.UniversityName, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                </div>
            </div>



        </div>
        <h3>Course Details</h3>
        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.Course)
                    @Html.TextBoxFor(model => model.Note.Course, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.CourseCode)
                    @Html.TextBoxFor(model => model.Note.CourseCode, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note.Professor)
                    @Html.TextBoxFor(model => model.Note.Professor, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                </div>
            </div>

        </div>

        <h3>Selling Information</h3>
        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    <label>Sell For<span> *</span></label><br>
                    Free
                    @Html.RadioButtonFor(model => model.Note.IsPaid, "False", htmlAttributes: new { @id = "free" })
                    Paid
                    @Html.RadioButtonFor(model => model.Note.IsPaid, "True", htmlAttributes: new { @id = "paid" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Note.Price)

                @Html.TextBoxFor(model => model.Note.Price, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title", @id = "price" })
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label>Note Preview</label>

                <input id="note-preview" type="file" name="previewfile" value="@Model.Note.Preview" />
                @if (Model.Note.DisplayPic != null)
                {
                    <img src="@Url.Content(@Model.Note.Preview)" id="removepreview" height="100" width="100" />

                    <button class="btn" id="deletePreview" type="button">Delete</button>
                    @Html.Hidden("RemovePreview", "", new { @id = "rpreview" })
                }


            </div>


        </div>

        <div class="btn-grp">

            <input type="submit" value="Save" formenctype="multipart/form-data" formaction="AddNote" formmethod="post" />

            @if (Model.Note.Status.Equals(5) || Model.Note==null)
            {
                if (Model.Note == null)
                {
                    <button class="btn" type="button" id="publish" disabled>Publish</button>
                           }
                            else
                            {
                    <button class="btn" type="button" id="publish" data-target="#publish-modal" data-toggle="modal">PUBLISH</button>

                    <div class="modal fade" id="publish-modal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="publish-modal">Add Review</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <p>Publishing this note will send note to administrator for review, once administrator review and approve then this note will be published to portal. Press yes to continue</p>
                                </div>
                                <div class="modal-footer">
                                   
                                    <input type="submit" value="Yes" class="btn" formenctype="multipart/form-data" formaction="PublishNote" formmethod="post" />
                                    <button type="sumbit" class="btn-block" onclick="window.location='@Url.Action("PublishNote",new { id=Model.Note.ID})'" >Yes</button>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" />
                                </div>
                            </div>
                        </div>
                    </div>
                }

            }


                </div>


        }


        </div>
    </div>
</section>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/custom")
<script>
    $(document).ready(function () {
        $("#deletePreview").click(function () {
            $("#removepreview").remove();
            $("#rpreview").val("Removed");

        });

        $("#delete").click(function () {
            $("#removepic").remove();
            $("#remove").val("Removed");

        });
    });

    $('.deleteItem').click(function (e) {
           e.preventDefault();
           var $ctrl = $(this);
           if (confirm('Do you really want to delete this file?')) {
               $.ajax({
                   url: '@Url.Action("DeleteFile")',
                   type: 'POST',
                   data: { id: $(this).data('id') }
               }).done(function (data) {
                   if (data.Result == "OK") {
                       $ctrl.closest('li').remove();
                   }
                   else if (data.Result.Message) {
                       alert(data.Result.Message);
                   }
               }).fail(function () {
                   alert("There is something wrong. Please try again.");
               })

           }
       });
</script>
