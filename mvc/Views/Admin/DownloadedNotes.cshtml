@using PagedList.Mvc;
@using PagedList;
@model IPagedList<NotesMarketPlace.Models.Download>

@{
    ViewBag.Title = "DownloadedNotes";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/custom/responsive-tabs.min.css")


    @Styles.Render("~/Content/custom/responsive.css")
    @Scripts.Render("~/bundles/jquery")
    <link href="~/Content/custom/downloaded-notes.css" rel="stylesheet" />
}

<div id="downloaded-notes-page">
    <section id="downloaded-notes">
        <div class="content-box-md">
            <div class="container">
                <h1>Downloaded Notes</h1>
                <div class="row">
                    <div class="col-md-6">
                        @using (Html.BeginForm("DownloadedNotes", "Admin", FormMethod.Get, new { @class = "form-inline" }))
                        {
                            <div class="select-3">
                                <div class="form-group1">
                                    <label>Note</label><br>
                                    @Html.DropDownList("dropdownsearchNote", ViewBag.dropdownsearch as SelectList, "Select", new { @class = "form-control dropddown", onchange = "this.form.submit();" })
                                </div>
                                <div class="form-group2">
                                    <label>Seller</label><br>
                                    @Html.DropDownList("dropdownsearchSeller", ViewBag.dropdownsearch as SelectList, "Select", new { @class = "form-control dropddown", onchange = "this.form.submit();" })
                                </div>
                                <div class="form-group3">
                                    <label>Buyer</label><br>
                                    @Html.DropDownList("dropdownsearchBuyer", ViewBag.dropdownsearch as SelectList, "Select", new { @class = "form-control dropddown", onchange = "this.form.submit();" })
                                </div>
                            </div>
                        }

                        </div>

                    <div class="col-md-6">
                        @using (Html.BeginForm("DownloadedNotes", "Admin", FormMethod.Get, new { @class = "form-inline" }))
                        {

                        <div class="form-group has-search">
                            <span class="fa fa-search form-control-feedback"></span>
                            @Html.TextBox("searchstring", null, htmlAttributes: new { @class = "form-control", placeholder = "Search notes here.." })
                        </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-outline-secondary">Search</button>
                               
                            </div>
                        }
                        </div>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <tr>
                            <th scope="col">SR NO.</th>

                            <th scope="col">@Html.ActionLink("NOTE TITLE", "DownloadedNotes", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearchNote = Request.QueryString["dropdownsearchNote"], dropdownsearchSeller = Request.QueryString["dropdownsearchSeller"], dropdownsearchBuyer = Request.QueryString[" dropdownsearchBuyer"] })</th>
                            <th scope="col">@Html.ActionLink("CATEGORY", "DownloadedNotes", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearchNote = Request.QueryString["dropdownsearchNote"], dropdownsearchSeller = Request.QueryString["dropdownsearchSeller"], dropdownsearchBuyer = Request.QueryString[" dropdownsearchBuyer"] })</th>
                            <th scope="col">@Html.ActionLink("BUYER", "DownloadedNotes", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearchNote = Request.QueryString["dropdownsearchNote"], dropdownsearchSeller = Request.QueryString["dropdownsearchSeller"], dropdownsearchBuyer = Request.QueryString[" dropdownsearchBuyer"] })</th>
                            <th scope="col">@Html.ActionLink("SELLER", "DownloadedNotes", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearchNote = Request.QueryString["dropdownsearchNote"], dropdownsearchSeller = Request.QueryString["dropdownsearchSeller"], dropdownsearchBuyer = Request.QueryString[" dropdownsearchBuyer"] })</th>
                            <th scope="col">@Html.ActionLink("SELL TYPE", "DownloadedNotes", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearchNote = Request.QueryString["dropdownsearchNote"], dropdownsearchSeller = Request.QueryString["dropdownsearchSeller"], dropdownsearchBuyer = Request.QueryString[" dropdownsearchBuyer"] })</th>
                            <th scope="col">@Html.ActionLink("PRICE", "DownloadedNotes", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearchNote = Request.QueryString["dropdownsearchNote"], dropdownsearchSeller = Request.QueryString["dropdownsearchSeller"], dropdownsearchBuyer = Request.QueryString[" dropdownsearchBuyer"] })</th>
                            <th scope="col">@Html.ActionLink("DOWNLOADED DATE/TIME", "DownloadedNotes", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearchNote = Request.QueryString["dropdownsearchNote"], dropdownsearchSeller = Request.QueryString["dropdownsearchSeller"], dropdownsearchBuyer = Request.QueryString[" dropdownsearchBuyer"] })</th>

                            <th scope="col"></th>
                        </tr>
                        @{ int i = 1;}
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @i;
                                    @{i++;}
                                </td>


                                <td><a href="#">@item.NoteTitle</a></td>
                                <td>@item.NoteCategory</td>
                                <td>@item.User.FullName<span><a @Url.Action("MemberDetails", new { id = item.User.ID })><img src="~/images/eye.png"></a></span></td>
                                <td>@item.User1.FullName<span><a @Url.Action("MemberDetails", new { id = item.User1.ID })><img src="~/images/eye.png"></a></span></td>
                                <td>@item.Note.ReferenceData.Value</td>
                                <td>@item.IsPaid</td>
                                <td>@item.Price</td>
                                <td>@item.DownloadDate</td>

                                <td>
                                    <span class="dropdown">
                                        <a href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                                        </a>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <a class="dropdown-item" href="@Url.Action("DownloadNotes",new { id=item.ID})">Download Notes</a>
                                            <a class="dropdown-item" href="@Url.Action("NoteDetails",new { id=item.ID})">View More Details</a>
                                        </div>
                                    </span>
                                </td>
                            </tr>
                        }
                    </table>
                    @Html.PagedListPager(Model, page => Url.Action("DownloadedNotes", new { sortby = Request.QueryString["sortby"], searchstring = Request.QueryString["searchstring"], dropdownsearchNote = Request.QueryString["dropdownsearchNote"], dropdownsearchSeller = Request.QueryString["dropdownsearchSeller"], dropdownsearchBuyer = Request.QueryString[" dropdownsearchBuyer"] , page }),
               new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = false, ClassToApplyToFirstListItemInPager = null, ClassToApplyToLastListItemInPager = null })

                </div>
            </div>
        </div>

    </section>
</div>
<script src="~/Scripts/bootstrap.bundle.min.js"></script>
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/custom")
