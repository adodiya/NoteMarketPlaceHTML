@using PagedList.Mvc;
@using PagedList;
@model IPagedList<NotesMarketPlace.Models.Note>

@{
    ViewBag.Title = "PublishedNotes";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    <link href="~/Content/custom/published.css" rel="stylesheet" />
}
<div id="published-notes-page">
    <section id="published-notes">
        <div class="content-box-md">
            <div class="container">
                <h1>Published Notes</h1>

                @using (Html.BeginForm("PublishedNotes", "Admin", FormMethod.Get, new { @class = "form-inline" }))
                {
                    <div class="row">

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Seller</label>

                                @Html.DropDownList("dropdownsearch", ViewBag.dropdownsearch as SelectList, "Select", new { @class = "form-control dropddown" })

                            </div>
                        </div>
                        <div class="col-md-6 form-right form-inline">


                            <div class="form-group has-search">
                                <span class="fa fa-search form-control-feedback"></span>
                                @Html.TextBox("searchstring", null, htmlAttributes: new { @class = "form-control", placeholder = "Search notes here.." })


                            </div>

                            <div class="form-group">
                                <input type="submit" value="Search" class="btn btn-outline-secondary" />

                            </div>

                        </div>

                    </div>
                }


                <div class="table-responsive">
                    <table class="table">

                        <tr>
                            <th scope="col">SR NO.</th>

                            <th scope="col">@Html.ActionLink("NOTE TITLE", "PublishedNotes", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">@Html.ActionLink("CATEGORY", "PublishedNotes", new { sortby = ViewBag.SortByCategory, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">SELL TYPE</th>
                            <th scope="col">@Html.ActionLink("PRICE", "PublishedNotes", new { sortby = ViewBag.SortByPrice, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">@Html.ActionLink("SELLER", "PublishedNotes", new { sortby = ViewBag.SortBySeller, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">@Html.ActionLink("PUBLISHED DATE", "PublishedNotes", new { sortby = ViewBag.SortByDate, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">APPROVED BY</th>


                            <th scope="col">@Html.ActionLink("NUMBER OF\nDownloads", "Dashboard", new { sortby = ViewBag.SortByStatus, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>



                            <th scope="col"></th>
                        </tr>
                        @{int i = 1;}
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @i;
                                    @{i++;}
                                </td>


                                <td><a href="#">@item.Title</a></td>
                                <td>@item.Category.Name</td>
                                <td> @(item.IsPaid?"Paid":"Free")</td>

                                <td>
                                    @if (item.Price == null)
                                    {<label>0</label>;
                                    }
                                    else
                                    { @item.Price}
                                </td>

                                <td>@item.User.FullName<span><a href="#"><img src="~/images/eye.png"></a></span></td>

                                <td>@item.PublishedDate</td>

                                <td>@item.User.FullName</td>

                                <td>@item.Downloads.Where(model => model.IsAttachmentDownloaded == true).Count()</td>
                                <td>

                                    <span class="dropdown">
                                        <a href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                                        </a>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <a class="dropdown-item" href="#">Download Notes</a>
                                            <a class="dropdown-item" href="#">View More Details</a>
                                            <a class="dropdown-item unpublish-btn" href="#" role="button" data-target="#unpublish" data-toggle="modal">Unpublish</a>
                                        </div>
                                        <div class="modal fade" id="unpublish" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        @item.Title - @item.Category.Name
                                                    </div>
                                                    <div class="modal-body">
                                                        @using (Html.BeginForm("Unpublish", "Admin", new { id = item.ID }, FormMethod.Post))
                                                        {
                                                            <div class="form-group">
                                                                <p>Are you sure you want to Unpublish this note?</p>
                                                                @Html.TextArea("Remarks", htmlAttributes: new { @class = "form-control", placeholder = "Write remarks" })
                                                                <input type="submit" value="Unpublish" class="btn btn-danger" />

                                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>

                                                            </div>
                                                        }

                                                    </div>



                                                </div>
                                            </div>
                                        </div>
                                    </span>
                                </td>

                            </tr>
                        }


                    </table>
                    @Html.PagedListPager(Model, page => Url.Action("PublishedNotes", new { searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"], sortby = Request.QueryString["sortby"], page }),
                 new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, ClassToApplyToFirstListItemInPager = null, ClassToApplyToLastListItemInPager = null })
                </div>
            </div>
        </div>

    </section>

</div>
