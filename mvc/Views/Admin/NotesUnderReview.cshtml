@using PagedList.Mvc;
@using PagedList;
@model IPagedList<NotesMarketPlace.Models.Note>

@{
    ViewBag.Title = "NotesUnderReview";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/custom/responsive-tabs.min.css")


    <link href="~/Content/custom/notes-under-review.css" rel="stylesheet" />
    @Styles.Render("~/Content/custom/responsive.css")
    @Scripts.Render("~/bundles/jquery")
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
}

<div id="notes-under-review">
    <section id="under-review-notes">
        <div class="content-box-md">
            <div class="container">
                <h1>Notes Under Review</h1>

                @using (Html.BeginForm("NotesUnderReview", "Admin", FormMethod.Get, new { @class = "form-inline" }))
                {
            <div class="row">
                
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Seller</label>

                        @Html.DropDownList("dropdownsearch", ViewBag.dropdownsearch as SelectList, "Select", new { @class = "form-control dropddown" })

                    </div>
                </div>
                <div class="col-md-6 form-right form-inline">


                    <div class="form-group has-search">
                        <span class="fa fa-search form-control-feedback"></span>
                        @Html.TextBox("searchstring", null, htmlAttributes: new { @class = "form-control", placeholder = "Search notes here.." })


                    </div>

                    <div class="form-group">
                        <input type="submit" value="Search" class="btn btn-outline-secondary" />

                    </div>

                </div>

            </div>

                }
                <div class="table-responsive">
                    <table class="table">

                        <tr>
                            <th scope="col">SR NO.</th>
                            <th scope="col">@Html.ActionLink("NOTE TITLE", "NotesUnderReview", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">@Html.ActionLink("CATEGORY", "NotesUnderReview", new { sortby = ViewBag.SortByCategory, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">@Html.ActionLink("SELLER", "NotesUnderReview", new { sortby = ViewBag.SortBySeller, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">@Html.ActionLink("DATE ADDED", "NotesUnderReview", new { sortby = ViewBag.SortByDate, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">@Html.ActionLink("STATUS", "NotesUnderReview", new { sortby = ViewBag.SortByStatus, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                            <th scope="col">ACTION</th>
                            <th scope="col"></th>
                        </tr>
                        @{int i=1;}
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@i;
                                @{i++;}</td>


                                <td><a href="@Url.Action("NoteDetails",new { id=item.ID})">@item.Title</a></td>
                                <td>@item.Category.Name</td>
                                <td>@item.User.FirstName @item.User.LastName<span><a href="@Url.Action("MemberDetails","Admin",new { id=item.User.ID})"><img src="~/images/eye.png"></a></span></td>
                                <td>@item.PublishedDate</td>
                                <td>@item.ReferenceData.Value</td>
                                <td>
                                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#approve">Approve</button>
                                    <div class="modal fade" id="approve" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">

                                                <div class="modal-body">

                                                    <p> If you approve the notes – System will publish the notes over portal</p><br />Please press yes to continue

                                                    
                                                </div>

                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-danger" onclick="window.location='@Url.Action("Approved", "User",new { id=item.ID})'">Yes</button>
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>

                                                </div>


                                            </div>
                                        </div>
                                    </div>

                                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#rejectModal">Reject</button>
                                    <div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    @item.Title - @item.Category.Name
                                                </div>
                                                <div class="modal-body">
                                                    @using (Html.BeginForm("Rejected", "Admin", new { id = item.ID }, FormMethod.Post))
                                                    {
                                                        <div class="form-group">
                                                            @Html.HiddenFor(model => item.ID)
                                                            @Html.TextArea("Remarks", htmlAttributes: new { @class = "form-control", placeholder = "Write remarks" })
                                                            
                                                           

                                                        </div>

                                                        <div class="form-group">
                                                            <button type="submit" class="btn btn-secondary" value="Yes" onclick="@Url.Action("Rejected",new { id=item.ID})" />
                                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                                                        </div>
                                                    }

                                                </div>
                                               



                                            </div>
                                        </div>
                                    </div>


                                    <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#inreviewModal">InReview</button>
                                    <div class="modal fade" id="inreviewModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">

                                                <div class="modal-body">
                                                    <div class="form-group">
                                                        <p>If you approve the notes – System will publish the notes over portal. Please press yes to continue</p>
                                                        <button type="submit" class="btn btn-danger" onclick="window.location='@Url.Action("InReview", "Admin",new { id=item.ID})'">Yes</button>
                                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                                                    </div>
                                                </div>




                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="dropdown">
                                        <a href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                                        </a>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <a class="dropdown-item" href="@Url.Action("NoteDetails","Admin",new { id=item.ID})">View More Details</a>
                                            <a class="dropdown-item" href="@Url.Action("DownloadNote","Admin",new { id=item.ID})">Download</a>
                                        </div>
                                    </span>
                                </td>
                            </tr>
                        }



                    </table>
                    @Html.PagedListPager(Model, page => Url.Action("NotesUnderReview", new { searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"], sortby = Request.QueryString["sortby"], page }),
                   new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, ClassToApplyToFirstListItemInPager = null, ClassToApplyToLastListItemInPager = null })
                </div>
            </div>
        </div>

    </section>

</div>
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/custom")