@model NotesMarketPlace.Models.User

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />

    <!-- Title -->
    <title>Notes - Marketplace</title>

    <!--Favicon-->
    <link rel="shortcut icon" href="../images/favicon.ico">
    <!--Google Fonts-->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/custom/responsive-tabs.min.css")

    @Styles.Render("~/Content/custom/signup.css")
    @Styles.Render("~/Content/custom/responsive.css")

    <script>
        $(".toggle-password").click(function () {

            $(this).toggleClass("fa-eye fa-eye-slash");
            var input = $($(this).attr("toggle"));
            if (input.attr("type") == "password") {
                input.attr("type", "text");
            } else {
                input.attr("type", "password");
            }
        });
    </script>


</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <section id="signup">

        <div id="signup-img" class="text-center image-fluid">
            <img src="~/images/top-logo.png">
        </div>
        <div class="container-fluid">
            <div class="row  justify-content-center">

                <div class="col-md-6 col-sm-8 col-12">
                    <div class="form_container">



                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            if ((string)TempData["Referrer"] == "SaveRegister")
                            {
                                <div class="alert alert-success">
                                    <strong class="text-center"><img src="~/images/SUCCESS.png" />Your account has been successfully created.</strong>
                                    <strong>An email has been sent to your registered email id . Plz verify your email to login into your account</strong>
                                </div>
                            }

                            <h1 class="text-center">Create an Account</h1>
                            <p class="text-center">Enter your details to signup</p>

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName)
                                @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new { @class = "form-control form-control-lg", placeholder = "Enter your first name" })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName)
                                @Html.TextBoxFor(model => model.LastName, htmlAttributes: new { @class = "form-control form-control-lg", placeholder = "Enter your last name" })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmailID)
                                @Html.TextBoxFor(model => model.EmailID, htmlAttributes: new { @class = "form-control form-control-lg", placeholder = "Enter email" })
                                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                @Html.ValidationMessage("EmailID", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password)
                                @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control form-control-lg", placeholder = "Enter your password" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                <span toggle="#Password" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword)

                                @Html.PasswordFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-control form-control-lg", placeholder = "Re-enter password", type = "password" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                <span toggle="#ConfirmPassword" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                            </div>
                            <button type="submit" class="btn btn-block" id="sign-up-btn" data-toggle="modal" data-target="#exampleModalCenter1">SIGN UP</button>

                            <p class="text-center">Already have an account?@Html.ActionLink("Login", "Login")</p>
                        }
                    </div>
                </div>
            </div>
        </div>
        <br>
    </section>

    }

    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/custom")

</body>
    </html>
