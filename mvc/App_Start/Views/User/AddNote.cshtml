@model NotesMarketPlace.Models.Notes_NotesAttachment

@{
    ViewBag.Title = "AddNote";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    @Styles.Render("~/Content/custom/responsive-tabs.min.css")

    @Styles.Render("~/Content/custom/add-notes.css")
    @Styles.Render("~/Content/custom/responsive.css")
}


<!-- Banner Starts-->
<section id="banner">
    <div class="content-box-md">
        <div class="container" id="banner-content">
            <h1 class="text-center">Add notes</h1>
        </div>

    </div>
</section>
<!-- Banner Ends-->
<!-- Add notes form Starts-->
<section id="add-notes">
    <div class="content-box-md">
        <div class="container">
            <h3>Basic Note Details</h3>

            @using (Html.BeginForm("AddNote", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Note.SellerID)
                @Html.HiddenFor(model => model.Note.ID)
              

                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.Title)
                            @Html.TextBoxFor(model => model.Note.Title, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                            @Html.ValidationMessageFor(model => model.Note.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.CategoryID)

                            @Html.DropDownListFor(model => model.Note.CategoryID, new SelectList(Model.Note.CategoryCollection, "CategoryID", "Name"), "Select", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Note.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.CountryID)

                            @Html.DropDownListFor(model => model.Note.CountryID, new SelectList(Model.Note.CountryCollection, "CountryID", "Name"), "Select", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Note.CountryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.TypeID)

                            @Html.DropDownListFor(model => model.Note.TypeID, new SelectList(Model.Note.TypeCollection, "TypeID", "Name"), "Select", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Note.TypeID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Display Picture</label>
                           <!-- <div class="image-upload form-control1 text-center">
                                <label for="display-picture-input">
                                    <img src="../images/User-Profile/upload.png">
                                    <h6 class="text center">Upload a picture</h6>
                                </label>-->

                                <input type="file" name="displaypic" value="@Model.Note.DisplayPic" />
                                @Html.ValidationMessageFor(model => model.Note.DisplayPic, "", new { @class = "text-danger" })
                           <!-- </div>-->
                           
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Upload Notes<span> *</span></label>
                            <!--  <div class="image-upload form-control1 text-center">
    <label for="notes-picture-input">
        <img src="../images/upload-note.png">
        <h6 class="text center">Upload your notes</h6>
    </label>-->

                            <input id="notes-picture-input" type="file" name="attachmentfiles" value="@Model.NotesAttachment.FilePath" multiple />
                            @Html.ValidationMessageFor(model => model.NotesAttachment.FilePath, "", new { @class = "text-danger" })
                            @if(Model.AttachmentList !=null)
                            {
                                <ul>
                                    @foreach(var file in Model.AttachmentList)
                                    {
                                        <li>
                                            @Html.HiddenFor(model=>@file.ID)
                                            @Html.DisplayFor(model=>@file.FileName)
                                            <button onclick="@Url.Action("Delete","User",new { id=@file.ID})">Delete</button>
                                        </li>
                                    }
                                </ul>
                            }
                            <!--</div>-->

                        </div>

                    </div>


                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.NoOfPages)
                            @Html.TextBoxFor(model => model.Note.NoOfPages, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                        </div>
                    </div>


                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.Description)
                            @Html.TextAreaFor(model => model.Note.Description, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                        </div>
                    </div>

                </div>
                <h3>Institution Details</h3>
                <div class="row">


                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.UniversityName)
                            @Html.TextBoxFor(model => model.Note.UniversityName, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                        </div>
                    </div>



                </div>
                <h3>Course Details</h3>
                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.Course)
                            @Html.TextBoxFor(model => model.Note.Course, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.CourseCode)
                            @Html.TextBoxFor(model => model.Note.CourseCode, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note.Professor)
                            @Html.TextBoxFor(model => model.Note.Professor, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                        </div>
                    </div>

                </div>

                <h3>Selling Information</h3>
                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Sell For<span> *</span></label><br>
                            Free
                            @Html.RadioButtonFor(model => model.Note.IsPaid, "False")
                            Paid
                            @Html.RadioButtonFor(model => model.Note.IsPaid, "True")
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Note.Price)

                        @Html.TextBoxFor(model => model.Note.Price, htmlAttributes: new { @class = "form-control", placeholder = "Enter your notes title" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label>Note Preview</label>
                        <div class="image-upload form-control1 note-preview-input text-center">
                            <label for="preview-input">
                                <img src="../images/upload-file.png">
                                <h6 class="text center">Upload a file</h6>
                            </label>
                            <input id="note-preview" type="file" name="previewfile" value="@Model.Note.Preview" />

                        </div>

                    </div>


                </div>

                <div class="btn-grp">

                    <button class="btn" id="save" type="submit">SAVE</button>
                    @if (Model.Note.Status.Equals(5))
                    {<button class="btn" id="publish">PUBLISH</button>}

                </div>


            }


        </div>
    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
