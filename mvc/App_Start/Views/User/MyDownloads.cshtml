@using PagedList.Mvc;
@using PagedList;
@model IPagedList<NotesMarketPlace.Models.Download>
@{
    ViewBag.Title = "MyDownloads";
    Layout = "~/Views/Shared/_UserLayout.cshtml";

    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/custom/responsive-tabs.min.css")

    @Styles.Render("~/Content/custom/my-downloads.css")
    @Styles.Render("~/Content/custom/responsive.css")
    @Scripts.Render("~/bundles/jquery")

    <script type="text/javascript">
        $("body").on("submit", "#Form1", function () {
            return confirm("Are you sure you want to mark this report as spam, you cannot update it later? ");
        });


    </script>

}


<section id="my-downloads">
    <div class="content-box-md">
        <div class="container">
            <div class="row">
                <div class="col-md-4"><h3>My Downloads</h3></div>
                <div class="col-md-8">
                    @using (Html.BeginForm("MyDownloads", "User", FormMethod.Get, new { @class = "form-inline" }))
                    {
                       

                    <div class="form-group has-search">
                        <span class="fa fa-search form-control-feedback"></span>
                        @Html.TextBox("searchstring", null, htmlAttributes: new { @class = "form-control", placeholder = "Search notes here.." })
                     
                    </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-outline-secondary">Search</button>
                              
                            </div>
                       }
                    </div>
            </div>
            <div class="table-responsive">
                <table class="table">
                    <tr>
                        <th scope="col">SR NO.</th>
                        <th scope="col">@Html.ActionLink("NOTE TITLE", "MyDownloads", new { sortby = ViewBag.SortByTitle, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                        <th scope="col">@Html.ActionLink("CATEGORY", "MyDownloads", new { sortby = ViewBag.SortByCategory, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                        <th scope="col">@Html.ActionLink("BUYER", "MyDownloads", new { sortby = ViewBag.SortByBuyer, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                        <th scope="col">@Html.ActionLink("SELL TYPE", "MyDownloads", new { sortby = ViewBag.SortByType, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                        <th scope="col">@Html.ActionLink("PRICE", "MyDownloads", new { sortby = ViewBag.SortByPrice, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>
                        <th scope="col">@Html.ActionLink("DOWNLOADED DATE/TIME", "MyDownloads", new { sortby = ViewBag.SortByDate, searchstring = Request.QueryString["searchstring"], dropdownsearch = Request.QueryString["dropdownsearch"] })</th>



                        <th scope="col"></th>
                    </tr>

                    @{int i = 1; }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @i
                                @{ i++;}
                            </td>
                            <td>
                                @Html.ActionLink(item.NoteTitle, "NotesDetails", new { id = item.NoteID })
                            </td>
                            <td>
                                @item.NoteCategory
                            </td>
                            <td>
                                @item.User.ID
                            </td>
                            <td>
                                @(item.IsPaid ? "Paid" : "Free")
                            </td>
                            <td>
                                $@item.Price
                            </td>
                            <td>
                                @item.DownloadDate
                            </td>
                            <td>

                                <a href="@Url.Action("NotesDetails", "User", new { id = item.Note })"><img src="../images/Dashboard/eye.png"></a><span class="dropdown">
                                    <a href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">

                                        <a class="dropdown-item" href="@Url.Action("DownloadNote", "User", new { id = item.Note })">Download Note</a>
                                        <a class="dropdown-item" href="#review-modal" data-toggle="modal">Add Review/Feedback</a>

                                        @if (item.ReportedIssues.Count == 0)
                                        {<a class="dropdown-item" href="#report-modal" data-toggle="modal">Report as inappropriate</a>}
                                        else
                                        { <a class="dropdown-item" href="#report-modal2" data-toggle="modal">Report as inappropriate</a>}

                                    </div>
                                    <div class="modal fade" id="review-modal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="review-modal">Add Review</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                @using (Html.BeginForm("AddReview", "User", new { id = item.ID }, FormMethod.Post))
                                                {
                                                    <div class="modal-body">

                                                        <div class="rate">

                                                            <label for="star5" title="text">5 stars</label>
                                                            <input type="radio" id="star4" name="rate" value="4" />
                                                            <label for="star4" title="text">4 stars</label>
                                                            <input type="radio" id="star3" name="rate" value="3" />
                                                            <label for="star3" title="text">3 stars</label>
                                                            <input type="radio" id="star2" name="rate" value="2" />
                                                            <label for="star2" title="text">2 stars</label>
                                                            <input type="radio" id="star1" name="rate" value="1" />
                                                            <label for="star1" title="text">1 star</label>
                                                        </div>
                                                        @Html.TextArea("Comments", htmlAttributes: new { @class = "form-input" })

                                                    </div>
                                                    <div class="modal-footer">

                                                        <button type="submit" class="btn btn-primary">Submit</button>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal fade" id="report-modal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="report-modal">@item.NoteTitle</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>

                                                @using (Html.BeginForm("ReportedIssues", "User", new { id = item.NoteID }, FormMethod.Post, new { @id = "Form1" }))
                                                {
                                                    <div class="modal-body">


                                                        @Html.TextArea("Comments", htmlAttributes: new { @class = "form-input" })
                                                    </div>
                                                    <div class="modal-footer">
                                                        <input type="submit" value="Submit" class="btn btn-primary" />

                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal fade" id="report-modal2" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="report-modal">@item.NoteTitle</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>


                                            </div>
                                        </div>
                                    </div>
                                </span>
                            </td>

                        </tr>
                    }

                </table>
                @Html.PagedListPager(Model, page => Url.Action("NotesUnderReview", new { searchstring = Request.QueryString["searchstring"], sortby = Request.QueryString["sortby"], page }),
                 new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, ClassToApplyToFirstListItemInPager = null, ClassToApplyToLastListItemInPager = null })
            </div>
        </div>
    </div>
</section>

<script src="~/Scripts/bootstrap.bundle.min.js"></script>
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/custom")
